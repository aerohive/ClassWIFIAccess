var db = require("./../app").db;

function DeviceSerializer(row){
    this.device = {};
    this.device.deviceId= row.deviceId;
    this.device.ownerId= row.ownerId;
    this.device.macAddress= row.macAddress;
    this.device.hostName = row.hostName;
    this.device.serialId= row.serialId;
    this.device.model= row.model;
    this.device.ip= row.ip;
    this.device.simType= row.simType;
    this.device.locations= row.locations;
}

DeviceSerializer.prototype.insertDB = function(callback){
    db.insertDB("Device", this.device, function(err){
        if (err){
            callback(err);
        }
        console.log("Device InsertDB");
        callback(err);
    });
};

DeviceSerializer.prototype.updateDB = function(rowId, callback){
    db.updateDB("Device", rowId, this.device, function(err){
        if (err){
            callback(err);
        }
        console.log("Device UpdateDB");
        callback(err);
    });
};


function Device(){
    this.id=null;
    this.deviceId= "";
    this.ownerId= "";
    this.macAddress= "";
    this.hostName = "";
    this.serialId= "";
    this.model= "";
    this.ip= "";
    this.simType= "";
    this.locations= "";
}


findOne = function(fields, options, callback){
    db.findOne("Device", fields, options, function(err, device){
        if (err){
            callback(err);
        }
        callback(err, device);
    });
};

findById = function(rowId, options, callback){
    db.findById("Device", rowId, options, function(err, device){
        if (err){
            return err;
        }
        callback(err, device);
    });
};

getAll = function(options, callback){
    var rOptions = options || {"orderBy":"hostName"};
    db.getAll("Device", rOptions, function(err, devices){
        if (err){
            return err;
        }
        callback(err, devices);
    })
};

deleteByID = function(apiId, callback){
    db.deleteById("Device", apiId, function(err, ret){
        callback(err, ret);
    })
};

module.exports = Device;
module.exports.findOne = findOne;
module.exports.findById = findById;
module.exports.getAll = getAll;
module.exports.DeviceSerializer = DeviceSerializer;
module.exports.deleteByID = deleteByID;