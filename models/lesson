var db = require("./../app").db;
var School = require("./school");
var User = require("./user");

function LessonSeralizer(row) {
    this.lesson = {};
    if (row.hasOwnProperty("startDateTs")){
        this.lesson.startDate = row.startDateTs;
    } else {
        this.lesson.startDate = row.startDate;
    }
    if (row.hasOwnProperty("startDateTs")){
        this.lesson.endDate = row.endDateTs;
    } else {
        this.lesson.endDate = row.endDate;
    }
    this.lesson.ClassroomId = row.ClassroomId;
    this.lesson.UserId = row.UserId;
    this.lesson.SchoolId = row.SchoolId;
}

LessonSeralizer.prototype.updateDB = function (LessonId, callback) {
    db.updateDB("Lesson", LessonId, this.lesson, function (err) {
        if (err) {
            callback(err);
        }
        console.log("Lesson UpdateDB");
        callback(err);
    });
};

LessonSeralizer.prototype.insertDB = function (callback) {
    db.insertDB("Lesson", this.lesson, function (err) {
        if (err) {
            callback(err);
        }
        console.log("Lesson InsertDB");
        callback(err);
    });
};

function Lesson() {
    this.id = "";
    this.startDate = "";
    this.endDate = "";
    this.lessonStatus = "";
    this.ClassroomId = "";
    this.classroomName = "";
    this.UserId = "";
    this.username = "";
    this.SchoolId = "";
    this.schoolName = "";
    this.endDateTs = "";
    this.startDateTs = "";
}


sortLesson = function (lessonA, lessonB) {
    var a = lessonA.startDateTs;
    var b = lessonB.startDateTs;
    if (a > b) {
        return -1;
    } else if (a < b) {
        return 1;
    } else {
        return 0;
    }
};

function getClassroomName(cId, callback){
    var Classroom = require("./classroom");
    var classroomName = "";
    if (cId > 0) {
        Classroom.findById(cId, null, function (err, classroom) {
            if (err){
                classroomName ="";
            } else if (classroom){
                classroomName = classroom.classroomName;
            }
            callback(classroomName);
        });
    } else {
        callback('');
    }
}

function getUserUsername(uId, callback){
    var username = "";
    if (uId > 0){
        User.findById(uId, null, function (err, user){
            if (user){
                username = user.username;
            }
            callback(username)
        });
    } else {
        callback(username);
    }
}

function getSchoolName(sId, callback){
    var schoolName = "";
    if (sId > 0){
        School.findById(sId, null, function (err, school){
            if (school){
                schoolName = school.schoolName;
            }
            callback(schoolName)
        });
    } else {
        callback(schoolName);
    }
}

createLesson = function (lessonFromDB, callback) {
    var lesson = new Lesson();
    var now = new Date().getTime();
    if (lessonFromDB) {
        lesson.id = lessonFromDB.id;
        lesson.startDateTs = lessonFromDB.startDate;
        lesson.startDate = new Date(lessonFromDB.startDate);
        lesson.endDateTs = lessonFromDB.endDate;
        if (lesson.startDateTs <= now){
            if (lesson.endDateTs > now || lesson.endDateTs == 0) {
                lesson.lessonStatus = "present";
            } else {
                lesson.lessonStatus = "past";
            }
        } else {
            lesson.lessonStatus = "future";
        }
        if (lesson.endDateTs == 0){
            lesson.endDate = "N/A";
        } else {
            lesson.endDate = new Date(lessonFromDB.endDate);
        }
        lesson.ClassroomId = lessonFromDB.ClassroomId;
        lesson.UserId = lessonFromDB.UserId;
        lesson.SchoolId = lessonFromDB.SchoolId;
        getClassroomName(lesson.ClassroomId, function(classroomName){
            lesson.classroomName = classroomName;
            getUserUsername(lesson.UserId, function(username){
                lesson.username = username;
                getSchoolName(lesson.SchoolId, function(schoolName){
                    lesson.schoolName = schoolName;
                    callback(lesson);
                });
            });
        });
    }
};


findAll = function (fields, options, callback) {
    db.findAll("Lesson", fields, options, function (err, lessonFromDB) {
        if (err) {
            callback(err);
        } else if (lessonFromDB.length == 0) {
            callback(null, null);
        } else {
            var lessonList = [];
            var lessonNum = 0;
            for (var classroom in lessonFromDB) {
                createLesson(lessonFromDB[classroom], function (lessonObject) {
                    lessonList.push(lessonObject);
                    lessonNum++;
                    if (lessonNum == lessonFromDB.length) {
                        lessonList.sort(sortLesson);
                        callback(err, lessonList);
                    }
                });
            }
        }
    });
};

findActive = function (cId, sId, callback) {
    var currentDate = new Date().getTime();
    if (cId > 0) {
        db.customSelect("Lesson",
            " ClassroomId = " + cId +
            " AND SchoolId = " + sId +
            " AND startDate < " + currentDate +
            " AND " +
            " (endDate > " + currentDate +
            " OR endDate = 0)",
            function (err, ret) {
                if (err) {
                    callback(err);
                } else {
                    callback(null, ret);
                }
            });
    } else {
        callback('');
    }
};

findOne = function (fields, options, callback) {
    db.findOne("Lesson", fields, options, function (err, lessonFromDB) {
        if (err) {
            callback(err);
        }
        createLesson(lessonFromDB, function (lesson) {
            callback(err, lesson);
        });
    });
};

findById = function (rowId, options, callback) {
    db.findById("Lesson", rowId, options, function (err, lessonFromDB) {
        if (err) {
            return err;
        }
        createLesson(lessonFromDB, function (lesson) {
            callback(err, lesson);
        });
    });
};


getAll = function (options, callback) {
    var rOptions = options || {"orderBy": "startDate"};
    db.getAll("Lesson", rOptions, function (err, lessonsFromDB) {
        if (err) {
            callback(err);
        } else if (lessonsFromDB.length == 0 || lessonsFromDB == null) {
            callback(null, null);
        } else {
            if (lessonsFromDB) {
                var insert = 0;
                var lessonList = [];
                for (var i = 0; i < lessonsFromDB.length; i++) {
                    createLesson(lessonsFromDB[i], function (lesson) {
                        lessonList.push(lesson);
                        insert++;
                        if (insert == lessonsFromDB.length) {
                            lessonList.sort(sortLesson);
                            callback(null, lessonList);
                        }
                    })
                }
            }
        }
    });
};

deleteByID = function (lessonId, callback) {
    db.deleteById("Lesson", lessonId, function (err, ret) {
        callback(ret, err);
    })
};

module.exports = Lesson;
module.exports.findAll = findAll;
module.exports.findOne = findOne;
module.exports.findById = findById;
module.exports.findActive = findActive;
module.exports.getAll = getAll;
module.exports.deleteById = deleteByID;
module.exports.LessonSeralizer = LessonSeralizer;